// <auto-generated />
using System;
using MarketPlatz_Notification_Helper.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketPlatz_Notification_Helper.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251022144250_AddTelegramChatId")]
    partial class AddTelegramChatId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("MarketPlatz_Notification_Helper.Models.ErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MonitorJobId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("StackTrace")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("MarketPlatz_Notification_Helper.Models.JobFilter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FilterType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("MonitorJobId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MonitorJobId");

                    b.ToTable("JobFilters");
                });

            modelBuilder.Entity("MarketPlatz_Notification_Helper.Models.ListingLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ListingCreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ListingId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("MonitorJobId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("NotifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MonitorJobId", "ListingId");

                    b.ToTable("ListingLogs");
                });

            modelBuilder.Entity("MarketPlatz_Notification_Helper.Models.MonitorJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailTo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastListingDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastListingId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastRunAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("TelegramChatId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MonitorJobs");
                });

            modelBuilder.Entity("MarketPlatz_Notification_Helper.Models.JobFilter", b =>
                {
                    b.HasOne("MarketPlatz_Notification_Helper.Models.MonitorJob", "MonitorJob")
                        .WithMany("Filters")
                        .HasForeignKey("MonitorJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonitorJob");
                });

            modelBuilder.Entity("MarketPlatz_Notification_Helper.Models.ListingLog", b =>
                {
                    b.HasOne("MarketPlatz_Notification_Helper.Models.MonitorJob", "MonitorJob")
                        .WithMany()
                        .HasForeignKey("MonitorJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonitorJob");
                });

            modelBuilder.Entity("MarketPlatz_Notification_Helper.Models.MonitorJob", b =>
                {
                    b.Navigation("Filters");
                });
#pragma warning restore 612, 618
        }
    }
}
